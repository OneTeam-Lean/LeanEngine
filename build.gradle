/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.3/userguide/java_library_plugin.html
 */


plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'com.github.sherter.google-java-format' version '0.8'
    id 'java'
    id 'idea'
    id 'org.flywaydb.flyway' version '6.2.3'
    id 'groovy'
}
sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

group = 'leanengin'
version = '1.0.0-SNAPSHOT'
repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

ext {
    lombokVersion = '1.18.4'
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.apache.tomcat', module: 'tomcat-jdbc'
    }
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.codehaus.groovy:groovy-all:2.5.8'
    implementation 'com.google.guava:guava:28.2-jre'
    implementation 'io.springfox:springfox-swagger2:2.9.2'
    implementation 'io.springfox:springfox-swagger-ui:2.9.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    annotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
    )
    runtimeOnly 'mysql:mysql-connector-java'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    testAnnotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
    )
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-spring-test:6.0.0'
    testImplementation 'org.mockito:mockito-core:2.+'
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:4.2.0'
    testImplementation "ch.vorburger.mariaDB4j:mariaDB4j:2.3.0"
    testImplementation 'org.mariadb.jdbc:mariadb-java-client:2.1.2'
    testAnnotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "org.projectlombok:lombok:${lombokVersion}",
    )
}
test {
    useJUnitPlatform()
    testLogging {
    }
    exclude 'com/thoughtworks/leanengine/JpaTestBase.class'
}


task initGitHooks {
    ['sh', '-c', 'git config core.hooksPath config/githook'].execute().text.trim()

}
task collectJars(type: Copy) {
    into '$buildDir/output/lib'
    from configurations.testRuntime
}
import com.github.sherter.googlejavaformatgradleplugin.VerifyGoogleJavaFormat

task verifyFormatting(type: VerifyGoogleJavaFormat) {
    source 'src/main'
    include '**/*.java'
    ignoreFailures false
}
