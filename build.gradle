/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.10.3/userguide/java_library_plugin.html
 */


plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "com.github.sherter.google-java-format" version "0.7.1"
    id 'java'
}

group = 'leanengin'
version = '1.0.0-SNAPSHOT'
repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter' }
    mavenCentral()
}
ext {
    lombokVersion = "1.18.4"
}
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.projectlombok:lombok:${lombokVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    annotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
    )



    runtimeOnly 'mysql:mysql-connector-java'


    testImplementation 'junit:junit:4.12'
    testAnnotationProcessor(
            "org.projectlombok:lombok:${lombokVersion}",
    )
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}
task makeFileExec(type: Exec) {
    commandLine 'chmod', '700', 'config/githook/pre-commit'
    commandLine 'chmod', '700', 'config/githook/pre-push'
}
test {
    useJUnitPlatform()
}

task initGitHooks {
    ['sh', '-c', 'git config core.hooksPath config/githook'].execute().text.trim()

}
compileJava.dependsOn makeFileExec